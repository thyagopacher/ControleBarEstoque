/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import negocio.PessoaRN;
import vo.Pessoa;

/**
 *
 * @author Thyago H Pacher
 */
public class JFLogin extends javax.swing.JFrame {

    PessoaRN prn = new PessoaRN();
    Pessoa   usuario;
    List<Pessoa> pessoas;
    private static final String COMMIT_ACTION = "commit";
    /**
     * Creates new form JFLogin
     */
    public JFLogin() {
        initComponents();
        centralizarComponente();
        this.setIconImage(new ImageIcon(getClass().getResource("/visao/img/logo.png")).getImage());    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        temail = new javax.swing.JTextField();
        tsenha = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login no sistema");
        setIconImage(new ImageIcon("./img/logo.png").getImage());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Usuário");

        jLabel2.setText("Senha");

        temail.setToolTipText("digite aqui e-mail de seu usuário no sistema");
        temail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                temailFocusLost(evt);
            }
        });

        tsenha.setToolTipText("digite aqui sua senha");
        tsenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tsenhaFocusLost(evt);
            }
        });
        tsenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tsenhaKeyPressed(evt);
            }
        });

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/logo.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(32, 32, 32)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tsenha, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(temail, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(temail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tsenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(lLogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        login();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(-1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tsenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tsenhaKeyPressed
      if(evt.getKeyCode() == 10){
          login();
      }
    }//GEN-LAST:event_tsenhaKeyPressed

    private void temailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_temailFocusLost
        Thread tvalidaEmail = new Thread(new Runnable() {
            @Override
            public void run() {
                String msg = prn.validaEmail(temail.getText());
                if(msg != null && !msg.isEmpty()){
                    JOptionPane.showMessageDialog(null, msg, "ERRO", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        });
        tvalidaEmail.start();
    }//GEN-LAST:event_temailFocusLost

    private void tsenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tsenhaFocusLost
        Thread tvalidaSenha = new Thread(new Runnable() {
            @Override
            public void run() {
                String msg = prn.validaSenha(temail.getText());
                if(msg != null && !msg.isEmpty()){
                    JOptionPane.showMessageDialog(null, msg, "ERRO", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        });
        tvalidaSenha.start();        
    }//GEN-LAST:event_tsenhaFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        temail.setFocusTraversalKeysEnabled(false);
        pessoas = prn.getListaCache();
        if(pessoas != null && !pessoas.isEmpty()){
            List<String> emails = montaListaEmail(pessoas);
            if(emails != null && !emails.isEmpty()){
                Autocomplete autoComplete = new Autocomplete(temail, emails);
                temail.getDocument().addDocumentListener(autoComplete);

                // Maps the tab key to the commit action, which finishes the autocomplete
                // when given a suggestion
                temail.getInputMap().put(KeyStroke.getKeyStroke("TAB"), COMMIT_ACTION);
                temail.getActionMap().put(COMMIT_ACTION, autoComplete.new CommitAction()); 
            }
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFLogin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lLogo;
    private javax.swing.JTextField temail;
    private javax.swing.JPasswordField tsenha;
    // End of variables declaration//GEN-END:variables

    public void login(){
        try {
            Thread tvalidacao = new Thread(() -> {
                String msg1 = prn.validaEmail(temail.getText());
                String msg2 = prn.validaSenha(new String(tsenha.getPassword()));
                String msg_final = "";
                if(msg1 != null && !msg1.isEmpty()){
                    msg_final += msg1;
                }
                if(msg2 != null && !msg2.isEmpty()){
                    msg_final += msg2;
                }
                if(!msg_final.isEmpty()){
                    JOptionPane.showMessageDialog(null, msg_final, "ERRO", JOptionPane.INFORMATION_MESSAGE);
                }
            });
            tvalidacao.start();
            usuario = prn.login(temail.getText(), new String(tsenha.getPassword()));
            if(usuario != null && usuario.getCodpessoa() > 0){
                usuario.setEmail(temail.getText());
                usuario.setSenha(new String(tsenha.getPassword()));
                if(pessoas == null || pessoas.isEmpty()){
                    pessoas = new ArrayList<>(1);
                }
                pessoas.add(usuario);
                String msg = prn.setObj(pessoas);
                if(msg != null && !msg.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Logado com sucesso ao sistema!" + msg, "Entrou", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Logado com sucesso ao sistema!", "Entrou", JOptionPane.INFORMATION_MESSAGE);
                }
                this.setVisible(false);
                new JFPrincipal(usuario).setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao realizar login, por favor verifique seu usuário!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (RemoteException | UnsupportedEncodingException ex) {
            JOptionPane.showMessageDialog(null, "Erro causado por:" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }        
    }
    
    public void centralizarComponente() {
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dw = getSize();
        setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }    
    
    public List<String> montaListaEmail(List<Pessoa> pessoas){
        List<String> emails = new ArrayList<>(5);
        if(pessoas != null && !pessoas.isEmpty()){
            int qtd = pessoas.size();
            for(int i = 0; i < qtd; i++){
                if(pessoas.get(i).getEmail() != null && !pessoas.get(i).getEmail().isEmpty()){
                    emails.add(pessoas.get(i).getEmail());
                }
            }
        }
        return emails;
    }
}
