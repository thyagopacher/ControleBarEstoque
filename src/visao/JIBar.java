/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import negocio.EmpresaRN;
import negocio.ItemPedidoRN;
import negocio.PedidoRN;
import negocio.PessoaRN;
import negocio.ProdutoRN;
import negocio.TipoPagamentoRN;
import vo.Apartamento;
import vo.Bloco;
import vo.Compra;
import vo.Empresa;
import vo.ItemPedido;
import vo.Pedido;
import vo.Pessoa;
import vo.Produto;
import vo.TipoPagamento;

/**
 *
 * @author ThyagoHenrique
 */
public class JIBar extends javax.swing.JInternalFrame {

    List<Produto> produtos;
    TableModelProduto tmp;

    
    ProdutoRN pRN;
    PedidoRN piRN;
    PessoaRN peRN;
    TipoPagamentoRN tpRN;
    List<Compra> compras;
    
    List<Bloco> blocos;
    List<TipoPagamento> tipopagamentos;
    int ultimo_pedido = 0;
    double total_aberto = 0.0;
    List<Apartamento>    apartamentos;
    ItemPedidoRN         iRN              = new ItemPedidoRN();
    TableModelItemPedido tmi              = new TableModelItemPedido();
    TableModelPedido     tmpe_abertos     = new TableModelPedido();
    TableModelPedido     tmpe_fechados    = new TableModelPedido();
    ItemPedido           item_pedido      = new ItemPedido();
    List<ItemPedido>     itens            = new ArrayList<>(100);
    List<ItemPedido>     itens_lista      = new ArrayList<>(100);
    Pedido               pedido_aberto    = new Pedido();
    Pedido               pedido_fechado   = new Pedido();
    List<Pessoa>         pessoas          = new ArrayList<>(100);
    List<Pessoa>         moradores        = new ArrayList<>(100);
    List<Pedido>         pedidos_abertas  = new ArrayList<>(100);
    List<Pedido>         pedidos_fechadas = new ArrayList<>(100);
    Bloco                bloco            = new Bloco();
    Apartamento          apartamento      = new Apartamento();
    Tela                 tela             = new Tela();
    Pessoa usuario;
    TipoPagamento tipo = new TipoPagamento();
    Produto produto = new Produto();
    Empresa empresa = new Empresa();
    EmpresaRN eRN;
    Pessoa morador = new Pessoa();
    Internet                internet       = new Internet();
    Validacao               validacao      = new Validacao();
    CbModelBloco            cbmBloco       = new CbModelBloco();
    CbModelMorador          cbmMorador     = new CbModelMorador();
    CbModelApartamento      cbmApartamento = new CbModelApartamento();
    CbModelTipoPagamento    cbmTipo        = new CbModelTipoPagamento();
    ComandaJPanel           comandaImpressao;
    Bloco                   bloco_selecione       = new Bloco("--Selecione--");
    Apartamento   apartamento_selecione = new Apartamento("--Selecione--", "--Selecione--");
    Pessoa        pessoa_selecione      = new Pessoa("--Selecione--");
    TipoPagamento tpSelecione           = new TipoPagamento(0, "--Selecione--");
    Impressao     impressao             = new Impressao();
    TipoPagamento tipo2                 = new TipoPagamento();
    Date hoje = new Date();
    Pessoa funcionario;
    /**
     * Creates new form JIBar
     */
    public JIBar() {
        initComponents();
    }
    
    public JIBar(Pessoa funcionario) {
        this.funcionario = funcionario;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpComanda = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbloco = new javax.swing.JComboBox();
        capartamento = new javax.swing.JComboBox();
        cmorador = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        ctipo = new javax.swing.JComboBox();
        llixeira = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        titem_pedido = new javax.swing.JTable();
        bconfirmar = new javax.swing.JButton();
        bfecharcomanda = new javax.swing.JButton();
        botaon1 = new javax.swing.JButton();
        botaon0 = new javax.swing.JButton();
        botaon2 = new javax.swing.JButton();
        botaon3 = new javax.swing.JButton();
        botaon4 = new javax.swing.JButton();
        botaon5 = new javax.swing.JButton();
        botaon6 = new javax.swing.JButton();
        botaon9 = new javax.swing.JButton();
        botaon8 = new javax.swing.JButton();
        botaon7 = new javax.swing.JButton();
        text_pedido = new javax.swing.JTextField();
        bdefine_bloco = new javax.swing.JButton();
        bdefine_apto = new javax.swing.JButton();
        llogo = new javax.swing.JLabel();
        limpressora = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ltotal_aberto = new javax.swing.JLabel();
        llixeira1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpedidos_abertos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        ctipopagamento2 = new javax.swing.JComboBox();
        bAlterarTipo = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lboleto = new javax.swing.JLabel();
        lavista = new javax.swing.JLabel();
        lvltotal = new javax.swing.JLabel();
        limpressora2 = new javax.swing.JLabel();
        llogo2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tpedidos_fechados = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        limpressora3 = new javax.swing.JLabel();
        llogo3 = new javax.swing.JLabel();
        bprocurarPedido = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        tnomeproduto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tvalor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tquantidade = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tcodigobarra = new javax.swing.JTextField();
        bsalvarProduto = new javax.swing.JButton();
        batualizarProduto = new javax.swing.JButton();
        bexcluirProduto = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tproduto = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cativo = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);

        tpComanda.setToolTipText("");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("IDENTIFICAÇÃO DO MORADOR"));

        jLabel1.setText("BLOCO");

        jLabel2.setText("APARTAMENTO");

        jLabel3.setText("NOME MORADOR");

        cbloco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cblocoActionPerformed(evt);
            }
        });

        capartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Selecione--" }));
        capartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capartamentoActionPerformed(evt);
            }
        });

        cmorador.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Selecione--" }));
        cmorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmoradorActionPerformed(evt);
            }
        });

        jLabel10.setText("TIPO PGTO");

        ctipo.setBackground(new java.awt.Color(255, 51, 51));
        ctipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "À VISTA", "BOLETO" }));
        ctipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctipoActionPerformed(evt);
            }
        });

        llixeira.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/lixeira.png"))); // NOI18N
        llixeira.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llixeiraMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cbloco, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(capartamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cmorador, 0, 474, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(ctipo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(llixeira, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(llixeira, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmorador)
                            .addComponent(capartamento)
                            .addComponent(cbloco)
                            .addComponent(ctipo))))
                .addContainerGap())
        );

        titem_pedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição", "PGTO", "Unitário", "Qtd", "Total"
            }
        ));
        titem_pedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titem_pedidoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(titem_pedido);

        bconfirmar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        bconfirmar.setText("CONFIRMA");
        bconfirmar.setToolTipText("Clique aqui para confirmar a comanda");
        bconfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bconfirmarActionPerformed(evt);
            }
        });

        bfecharcomanda.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bfecharcomanda.setForeground(java.awt.Color.red);
        bfecharcomanda.setText("FECHAR COMANDA");
        bfecharcomanda.setToolTipText("Clique aqui para fechar a comanda");
        bfecharcomanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bfecharcomandaActionPerformed(evt);
            }
        });

        botaon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON1.png"))); // NOI18N
        botaon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon1ActionPerformed(evt);
            }
        });

        botaon0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON0.png"))); // NOI18N
        botaon0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon0ActionPerformed(evt);
            }
        });

        botaon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON2.png"))); // NOI18N
        botaon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon2ActionPerformed(evt);
            }
        });

        botaon3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON3.png"))); // NOI18N
        botaon3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon3ActionPerformed(evt);
            }
        });

        botaon4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON4.png"))); // NOI18N
        botaon4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon4ActionPerformed(evt);
            }
        });

        botaon5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON5.png"))); // NOI18N
        botaon5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon5ActionPerformed(evt);
            }
        });

        botaon6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON6.png"))); // NOI18N
        botaon6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon6ActionPerformed(evt);
            }
        });

        botaon9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON9.png"))); // NOI18N
        botaon9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon9ActionPerformed(evt);
            }
        });

        botaon8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON8.png"))); // NOI18N
        botaon8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon8ActionPerformed(evt);
            }
        });

        botaon7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/BUTTON7.png"))); // NOI18N
        botaon7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaon7ActionPerformed(evt);
            }
        });

        text_pedido.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        text_pedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_pedidoKeyPressed(evt);
            }
        });

        bdefine_bloco.setText("BLOCO");
        bdefine_bloco.setToolTipText("aperte aqui para definir o bloco");
        bdefine_bloco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdefine_blocoActionPerformed(evt);
            }
        });

        bdefine_apto.setText("APTO");
        bdefine_apto.setToolTipText("aperte aqui para definir o apartamento");
        bdefine_apto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdefine_aptoActionPerformed(evt);
            }
        });

        llogo.setText("logo");

        limpressora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/impressora.png"))); // NOI18N
        limpressora.setToolTipText("Clique para visualizar e imprimir");
        limpressora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpressoraMouseClicked(evt);
            }
        });

        jLabel13.setText("Valor Total em Aberto");
        jLabel13.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray, 1, true));

        ltotal_aberto.setText("R$ 0,00");
        ltotal_aberto.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        llixeira1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/lixeira.png"))); // NOI18N
        llixeira1.setToolTipText("Clique para limpar o campo ao lado");
        llixeira1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llixeira1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ltotal_aberto, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(llogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(limpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(bfecharcomanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botaon1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaon4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaon7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botaon2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaon5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaon8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botaon3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaon9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaon6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(botaon0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(text_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(llixeira1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(bdefine_bloco, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(bdefine_apto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(bconfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(llogo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ltotal_aberto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bdefine_bloco, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(bdefine_apto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botaon1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaon4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaon7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botaon2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaon3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(botaon6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(botaon9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(botaon5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaon8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botaon0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(llixeira1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(text_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bconfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(limpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bfecharcomanda, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62))))
        );

        tpComanda.addTab("INSERIR PEDIDOS", jPanel1);

        tpedidos_abertos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COMANDA", "BL", "APTO", "BOLETO", "À VISTA", "Valor Total"
            }
        ));
        tpedidos_abertos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpedidos_abertosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tpedidos_abertos);

        jLabel4.setText("TIPO PGTO");

        ctipopagamento2.setBackground(java.awt.Color.red);
        ctipopagamento2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "À VISTA", "BOLETO" }));
        ctipopagamento2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctipopagamento2ActionPerformed(evt);
            }
        });

        bAlterarTipo.setForeground(java.awt.Color.red);
        bAlterarTipo.setText("ALTERAR");
        bAlterarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAlterarTipoActionPerformed(evt);
            }
        });

        jLabel11.setText("TOTAL GERAL ABERTO");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        lboleto.setText("R$ 0,00");
        lboleto.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        lavista.setText("R$ 0,00");
        lavista.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        lvltotal.setText("R$ 0,00");
        lvltotal.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        limpressora2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/impressora.png"))); // NOI18N
        limpressora2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpressora2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lboleto, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lavista, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvltotal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ctipopagamento2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAlterarTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(llogo2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(limpressora2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lavista, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lvltotal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lboleto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(llogo2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(limpressora2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(ctipopagamento2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bAlterarTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tpComanda.addTab("COMANDAS ABERTAS", jPanel2);

        tpedidos_fechados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COMANDA", "BL", "APTO", "BOLETO", "À VISTA", "Valor Total"
            }
        ));
        tpedidos_fechados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpedidos_fechadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tpedidos_fechados);

        jLabel5.setText("Data");

        limpressora3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/img/impressora.png"))); // NOI18N
        limpressora3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpressora3MouseClicked(evt);
            }
        });

        bprocurarPedido.setText("Procurar");
        bprocurarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bprocurarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(limpressora3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(llogo3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(bprocurarPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(llogo3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(limpressora3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bprocurarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tpComanda.addTab("COMANDAS FECHADAS", jPanel3);

        jLabel6.setText("Nome");

        jLabel7.setText("Valor");

        tvalor.setToolTipText("valor que o produto custo, coloque sem R$");

        jLabel8.setText("Quantidade");

        tquantidade.setText("1");
        tquantidade.setToolTipText("Qtd. em estoque do produto");
        tquantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tquantidadeKeyTyped(evt);
            }
        });

        jLabel9.setText("C. Barra");

        tcodigobarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tcodigobarraKeyReleased(evt);
            }
        });

        bsalvarProduto.setText("Salvar");
        bsalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalvarProdutoActionPerformed(evt);
            }
        });

        batualizarProduto.setText("Atualizar");
        batualizarProduto.setToolTipText("Selecione antes um produto na tabela abaixo ou use a máquina leitora de código");
        batualizarProduto.setEnabled(false);
        batualizarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batualizarProdutoActionPerformed(evt);
            }
        });

        bexcluirProduto.setText("Excluir");
        bexcluirProduto.setToolTipText("Selecione antes um produto na tabela abaixo ou use a máquina leitora de código");
        bexcluirProduto.setEnabled(false);
        bexcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bexcluirProdutoActionPerformed(evt);
            }
        });

        tproduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Valor", "Qtd"
            }
        ));
        tproduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tprodutoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tproduto);

        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Ativo");

        cativo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "sim", "não" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tnomeproduto, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(tcodigobarra))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tvalor, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(cativo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(tquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(bsalvarProduto)
                        .addGap(18, 18, 18)
                        .addComponent(batualizarProduto)
                        .addGap(23, 23, 23)
                        .addComponent(bexcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(tquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(tnomeproduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tcodigobarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(batualizarProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsalvarProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bexcluirProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tpComanda.addTab("CADASTRO DE PRODUTOS", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpComanda)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tpComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cblocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cblocoActionPerformed
        if (cbloco.getSelectedIndex() != -1) {
            bloco = (Bloco)cbmBloco.getSelectedItem();
            defineApartamento();
        }
    }//GEN-LAST:event_cblocoActionPerformed

    private void capartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capartamentoActionPerformed
        if (capartamento.getSelectedIndex() != -1) {
            apartamento = (Apartamento)cbmApartamento.getSelectedItem();
            defineMorador();
        }
    }//GEN-LAST:event_capartamentoActionPerformed

    private void cmoradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmoradorActionPerformed
        if (cmorador.getSelectedIndex() != -1) {
            morador = moradores.get(cmorador.getSelectedIndex());
        }
    }//GEN-LAST:event_cmoradorActionPerformed

    private void ctipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctipoActionPerformed
        if (ctipo.getSelectedIndex() != -1 && tipopagamentos != null && !tipopagamentos.isEmpty()) {
            tipo = tipopagamentos.get(ctipo.getSelectedIndex());
        }
    }//GEN-LAST:event_ctipoActionPerformed

    private void llixeiraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llixeiraMouseClicked
        //limpando combos
        Thread tlimpa = new Thread(() -> {
            pedido_aberto = new Pedido();
            itens_lista   = new ArrayList<>(5);
            itens         = new ArrayList<>(5);
            morador       = new Pessoa();
            cbmBloco.clear();
            cbmBloco.addList(blocos);
            cbmApartamento.clear();
            cbmApartamento.addList(apartamentos);
            cbmMorador.clear();
            cbmMorador.addList(pessoas);
            cbmTipo.clear();
            cbmTipo.addList(tipopagamentos);
            text_pedido.setText("");
            listaItens();
        });
        tlimpa.start();
    }//GEN-LAST:event_llixeiraMouseClicked

    private void titem_pedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titem_pedidoMouseClicked
        Thread titemExcluir = new Thread(() -> {
            item_pedido = itens_lista.get(titem_pedido.getSelectedRow());
            if(item_pedido != null && item_pedido.getCoditem() > 0){
                if (evt.getClickCount() == 2) {
                    int    response = JOptionPane.showConfirmDialog(null, "Você quer excluir o item da comanda?", "Confirmação de excluir:",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (response == JOptionPane.YES_OPTION) {
                        String msg = iRN.excluirItemPedido(item_pedido);
                        if(msg != null && !msg.isEmpty() && !msg.equals("1")){
                            JOptionPane.showMessageDialog(null, msg, "Erro", JOptionPane.ERROR_MESSAGE);
                        }else{
                            itens_lista.remove(item_pedido);
                            listaItens();
                        }
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao selecionar item da comanda!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        });
        titemExcluir.start();
    }//GEN-LAST:event_titem_pedidoMouseClicked

    private void bconfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bconfirmarActionPerformed
        listaPedidoAbertos();
        JOptionPane.showMessageDialog(null, "Comanda aberta!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bconfirmarActionPerformed

    private void bfecharcomandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bfecharcomandaActionPerformed
        if (morador != null && morador.getCodpessoa() > 0) {
            if (pedido_aberto == null || pedido_aberto.getCodpedido() == 0) {
                JOptionPane.showMessageDialog(null, "Selecione comanda em aberto para fechar!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            } else {
                pedidos_abertas.remove(pedido_aberto);
                listaPedidoAbertos();
                pedido_aberto.setDtpedido(new Date());
                pedido_aberto.setCodstatus(2);
                String msg = piRN.atualizarPedido(pedido_aberto);
                if(msg != null && !msg.isEmpty() && Integer.valueOf(msg) == 0){
                    JOptionPane.showMessageDialog(null, "Erro ao fechar comanda!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                }else{
                    pedidos_fechadas.add(pedido_aberto);
                    JOptionPane.showMessageDialog(null, "Comanda fechada!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    listaPedidoFechados();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Informe nome do morador fechando a comanda!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_bfecharcomandaActionPerformed

    private void botaon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon1ActionPerformed
        text_pedido.setText(text_pedido.getText() + "1");
    }//GEN-LAST:event_botaon1ActionPerformed

    private void botaon0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon0ActionPerformed
        text_pedido.setText(text_pedido.getText() + "0");
    }//GEN-LAST:event_botaon0ActionPerformed

    private void botaon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon2ActionPerformed
        text_pedido.setText(text_pedido.getText() + "2");
    }//GEN-LAST:event_botaon2ActionPerformed

    private void botaon3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon3ActionPerformed
        text_pedido.setText(text_pedido.getText() + "3");
    }//GEN-LAST:event_botaon3ActionPerformed

    private void botaon4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon4ActionPerformed
        text_pedido.setText(text_pedido.getText() + "4");
    }//GEN-LAST:event_botaon4ActionPerformed

    private void botaon5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon5ActionPerformed
        text_pedido.setText(text_pedido.getText() + "5");
    }//GEN-LAST:event_botaon5ActionPerformed

    private void botaon6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon6ActionPerformed
        text_pedido.setText(text_pedido.getText() + "6");
    }//GEN-LAST:event_botaon6ActionPerformed

    private void botaon9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon9ActionPerformed
        text_pedido.setText(text_pedido.getText() + "9");
    }//GEN-LAST:event_botaon9ActionPerformed

    private void botaon8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon8ActionPerformed
        text_pedido.setText(text_pedido.getText() + "8");
    }//GEN-LAST:event_botaon8ActionPerformed

    private void botaon7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaon7ActionPerformed
        text_pedido.setText(text_pedido.getText() + "7");
    }//GEN-LAST:event_botaon7ActionPerformed

    private void text_pedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_pedidoKeyPressed
        if (evt.getKeyCode() == 10) {
            String msg = "";
            if (morador == null || morador.getCodpessoa() == 0) {
                JOptionPane.showMessageDialog(null, "Antes de abrir pedido escolha um morador!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (tipo == null || tipo.getCodtipo() == 0) {
                JOptionPane.showMessageDialog(null, "Antes de abrir pedido escolha um tipo de pagamento!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                pedido_aberto = new Pedido();
                pedido_aberto.setEmpresa(empresa);
                pedido_aberto.setFuncionario(usuario);
                pedido_aberto.setMorador(morador);
                pedido_aberto.setTipo(tipo);
                if(pedidos_abertas != null && !pedidos_abertas.isEmpty()){
                    int qtdAbertas = pedidos_abertas.size();
                    int qtdAbertasNEncontradas = 0;
                    for(int i = 0; i < qtdAbertas; i++){
                        if(pedidos_abertas.get(i).getEmpresa().getCodempresa() == pedido_aberto.getEmpresa().getCodempresa()
                            && pedidos_abertas.get(i).getFuncionario().getCodpessoa() == pedido_aberto.getFuncionario().getCodpessoa()
                            && pedidos_abertas.get(i).getMorador().getCodpessoa() == pedido_aberto.getMorador().getCodpessoa()
                            && pedidos_abertas.get(i).getTipo().getCodtipo() == pedido_aberto.getTipo().getCodtipo()){
                            pedido_aberto.setCodpedido(pedidos_abertas.get(i).getCodpedido());
                            pedidos_abertas.set(i, pedido_aberto);
                            break;
                        }else{
                            qtdAbertasNEncontradas++;
                        }
                    }
                    if(qtdAbertas > 0 && qtdAbertasNEncontradas == qtdAbertas){
                        pedido_aberto.setCodstatus(1);//padrão em aberta o status
                        msg = piRN.inserirPedido(pedido_aberto);//senao encontrado o pedido para atualizar ele inseri
                        pedido_aberto.setCodpedido(Integer.valueOf(msg));
                        pedidos_abertas.add(pedido_aberto);
                    }
                }else if(pedidos_abertas == null || pedidos_abertas.isEmpty()){
                    pedido_aberto.setCodstatus(1);//padrão em aberta o status
                    msg = piRN.inserirPedido(pedido_aberto);
                    pedido_aberto.setCodpedido(Integer.valueOf(msg));
                    pedidos_abertas.add(pedido_aberto);
                }
                if (msg != null && !msg.isEmpty() && Integer.valueOf(msg) == 0) {
                    JOptionPane.showMessageDialog(null, "Erro ao capturar último pedido para sistema!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {
                    int qtd = produtos.size();
                    int qtdProdutoNEncontrado = 0;
                    for (int i = 0; i < qtd; i++) {
                        if (i + 1 == Integer.valueOf(text_pedido.getText())) {
                            ItemPedido item = new ItemPedido();
                            item.setProduto(produtos.get(i));
                            item.setPedido(pedido_aberto);
                            item.setUnitario(produtos.get(i).getValor());
                            item.setEmpresa(empresa);
                            item.setFuncionario(usuario);
                            if (itens != null && !itens.isEmpty()) {
                                int qtdItens = itens.size();
                                int qtdNEncontrado = 0;
                                for (int j = 0; j < qtdItens; j++) {
                                    if (item.getProduto().getCodproduto() == itens.get(j).getProduto().getCodproduto()) {
                                        item.setCoditem(itens.get(j).getCoditem());
                                        item.setQtd(itens.get(j).getQtd() + 1);
                                        String msgItem = iRN.atualizarItemPedido(item);
                                        if((msgItem != null && !msgItem.isEmpty() && Integer.valueOf(msgItem) == 0)){
                                            JOptionPane.showMessageDialog(null, "Item não pode ser atualizado, houve algum erro no servidor!", "Erro ao atualizar item", JOptionPane.ERROR_MESSAGE);
                                        }else{
                                            itens.set(i, item);//setando nova quantidade quando o item é passado mais de uma vez...
                                        }
                                        qtdNEncontrado = 0;
                                        break;//aqui para pois se encontrar e setar a nova quantidade ja fez o que devia.
                                    } else {
                                        qtdNEncontrado++;
                                    }
                                }
                                if (qtdNEncontrado == qtdItens) {
                                    item.setQtd(1);
                                    String msgItem = iRN.inserirItemPedido(item);
                                    if((msgItem != null && !msgItem.isEmpty() && Integer.valueOf(msgItem) == 0)){
                                        JOptionPane.showMessageDialog(null, "Item não pode ser inserido, houve algum erro no servidor!", "Erro ao inserir item", JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        itens.add(item);
                                    }
                                }
                            } else {
                                item.setQtd(1);
                                String msgItem = iRN.inserirItemPedido(item);
                                if((msgItem != null && !msgItem.isEmpty() && Integer.valueOf(msgItem) == 0)){
                                    JOptionPane.showMessageDialog(null, "Item não pode ser inserido, houve algum erro no servidor!", "Erro ao inserir item", JOptionPane.ERROR_MESSAGE);
                                }else{
                                    item.setCoditem(Integer.valueOf(msgItem));
                                    itens.add(item);
                                }
                            }
                            qtdProdutoNEncontrado = 0;
                            total_aberto = total_aberto + produtos.get(i).getValor();
                            itens_lista = new ArrayList<>(itens.size());
                            itens_lista.addAll(itens);
                            listaItens();
                            break;
                        } else {
                            qtdProdutoNEncontrado++;
                        }
                    }
                    if (qtdProdutoNEncontrado > 0 && qtdProdutoNEncontrado == qtd) {
                        JOptionPane.showMessageDialog(null, "Produto não encontrado!!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                    //após devidamente inserida no banco de dados ele lista nas comandas abertas
                    pedido_aberto.setValor(total_aberto);
                    ltotal_aberto.setText(Validacao.formatMoeda(total_aberto));
                }
            }

        }
    }//GEN-LAST:event_text_pedidoKeyPressed

    private void bdefine_blocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdefine_blocoActionPerformed
        if(blocos != null && !blocos.isEmpty()){
            Collections.sort(blocos);
            int index = Collections.binarySearch(blocos, new Bloco(text_pedido.getText()));
            if (index > 0) {
                bloco = blocos.get(index);
                defineBloco(text_pedido.getText());
                text_pedido.setText("");
                defineApartamento();
            }else{
                JOptionPane.showMessageDialog(null, "Bloco não encontrado por favor verifique!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_bdefine_blocoActionPerformed

    private void bdefine_aptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdefine_aptoActionPerformed
        Thread tdefine_apto = new Thread(() -> {
            if (apartamentos != null && !apartamentos.isEmpty()) {
                Collections.sort(apartamentos);
                Apartamento aProcurado = new Apartamento(bloco.getBloco(), text_pedido.getText());
                int index = Collections.binarySearch(apartamentos, aProcurado);
                if(index == 0){
                    JOptionPane.showMessageDialog(null, "Apartamento não encontrado, por favor escolha outro!", "Erro", JOptionPane.ERROR_MESSAGE);
                }else{
                    apartamento = aProcurado;
                    defineApartamento2();
                }
            }
        });
        tdefine_apto.start();
    }//GEN-LAST:event_bdefine_aptoActionPerformed

    private void limpressoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpressoraMouseClicked
        Thread tvisualizar = new Thread(() -> {
            if(pedido_aberto != null && pedido_aberto.getCodpedido() > 0){
                comandaImpressao = new ComandaJPanel(pedido_aberto, usuario);
                impressao.visualizaImpressao(comandaImpressao);
            }else{
                JOptionPane.showMessageDialog(null, "Você não selecionou nenhuma comanda ainda!!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            }
        });
        tvisualizar.start();
    }//GEN-LAST:event_limpressoraMouseClicked

    private void llixeira1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llixeira1MouseClicked
        text_pedido.setText("");
    }//GEN-LAST:event_llixeira1MouseClicked

    private void tpedidos_abertosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpedidos_abertosMouseClicked
        Thread tpedidoAberto = new Thread(() -> {
            if (tpedidos_abertos.getSelectedRow() != -1) {
                pedido_aberto = pedidos_abertas.get(tpedidos_abertos.getSelectedRow());
                if (evt.getClickCount() == 2) {
                    if(itens == null || itens.isEmpty()){
                        itens = iRN.procurarItemPedido(pedido_aberto.getCodpedido(), usuario.getEmpresa().getCodempresa());
                    }
                    itens_lista = new ArrayList<>(itens.size());
                    int qtd = itens.size();
                    for(int i = 0; i < qtd; i++){
                        if(itens.get(i).getPedido().getCodpedido() == pedido_aberto.getCodpedido()){
                            itens_lista.add(itens.get(i));
                        }
                    }
                    listaItens();
                    cbmTipo.setSelectedItem(pedido_aberto.getTipo());
                    cbmMorador.setSelectedItem(pedido_aberto.getMorador());
                    morador = pedido_aberto.getMorador();
                    cbloco.setSelectedItem(new Bloco(pedido_aberto.getMorador().getBloco()));
                    cbmApartamento.setSelectedItem(new Apartamento(pedido_aberto.getMorador().getBloco(), pedido_aberto.getMorador().getApartamento()));
                    tpComanda.setSelectedIndex(0); //volta para a primeira aba para mostrar itens de pedido e fechar comanda
                }
            }
        });
        tpedidoAberto.start();
    }//GEN-LAST:event_tpedidos_abertosMouseClicked

    private void ctipopagamento2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctipopagamento2ActionPerformed
        if (ctipo.getSelectedIndex() != -1 && tipopagamentos != null && !tipopagamentos.isEmpty()) {
            tipo2 = tipopagamentos.get(ctipo.getSelectedIndex());
        }
    }//GEN-LAST:event_ctipopagamento2ActionPerformed

    private void bAlterarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAlterarTipoActionPerformed
        Thread tAlterarTipo = new Thread(() -> {
            if (tipo2 == null || tipo2.getCodtipo() == 0) {
                JOptionPane.showMessageDialog(null, "Selecione tipo de pagamento", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            }else if(pedido_aberto == null || pedido_aberto.getCodpedido() == 0){
                JOptionPane.showMessageDialog(null, "Selecione comanda em aberto", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            }else if(tpedidos_abertos.getSelectedRow() != -1){
                if(pedido_aberto.getTipo().getCodtipo() != tipo2.getCodtipo()){
                    pedido_aberto.setTipo(tipo2);
                    double boleto = Validacao.formatToDouble(lboleto.getText());
                    double avista = Validacao.formatToDouble(lavista.getText());
                    if(tipo2.getNome().equalsIgnoreCase("boleto")){
                        lboleto.setText(Validacao.formatMoeda(boleto + pedido_aberto.getValor()));
                        lavista.setText(Validacao.formatMoeda(avista - pedido_aberto.getValor()));
                    }else{
                        lavista.setText(Validacao.formatMoeda(avista + pedido_aberto.getValor()));
                        lboleto.setText(Validacao.formatMoeda(boleto - pedido_aberto.getValor()));
                    }
                    String msg = piRN.atualizarPedido(pedido_aberto);
                    if(msg != null && !msg.isEmpty() && Integer.valueOf(msg) == 0){
                        JOptionPane.showMessageDialog(null, "Erro ao atualizar tipo de pagamento para comanda aberta, por favor verifique servidor!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                    }else{
                        pedidos_abertas.set(tpedidos_abertos.getSelectedRow(), pedido_aberto);
                        listaPedidoAbertos();
                    }
                }
            }
        });
        tAlterarTipo.start();
    }//GEN-LAST:event_bAlterarTipoActionPerformed

    private void limpressora2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpressora2MouseClicked
        if(pedido_aberto != null && pedido_aberto.getCodpedido() > 0){
            comandaImpressao = new ComandaJPanel(pedido_aberto, usuario);
            impressao.visualizaImpressao(comandaImpressao);
        }else{
            JOptionPane.showMessageDialog(null, "Você não selecionou nenhuma comanda ainda!!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_limpressora2MouseClicked

    private void tpedidos_fechadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpedidos_fechadosMouseClicked
        if(pedidos_fechadas != null && !pedidos_fechadas.isEmpty()){
            pedido_fechado = pedidos_fechadas.get(tpedidos_fechados.getSelectedRow());
        }
    }//GEN-LAST:event_tpedidos_fechadosMouseClicked

    private void limpressora3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpressora3MouseClicked
        if(pedido_fechado != null && pedido_fechado.getCodpedido() > 0){
            comandaImpressao = new ComandaJPanel(pedido_fechado, usuario);
            impressao.visualizaImpressao(comandaImpressao);
        }else{
            JOptionPane.showMessageDialog(null, "Você não selecionou nenhuma comanda ainda!!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_limpressora3MouseClicked

    private void bprocurarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bprocurarPedidoActionPerformed
        Thread tprocurarPedido = new Thread(() -> {
            String hoje2     = validacao.mascaraData("yyyy-MM-dd", jDateChooser1.getDate());
            pedidos_fechadas = piRN.procurarPedido(hoje2, usuario.getEmpresa().getCodempresa());
            if(pedidos_fechadas != null && !pedidos_fechadas.isEmpty()){
                listaPedidoFechados();
            }else{
                JOptionPane.showMessageDialog(null, "Nada encontrado!!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                pedidos_fechadas = new ArrayList<>(5);
                listaPedidoFechados();
            }
        });
        tprocurarPedido.start();

    }//GEN-LAST:event_bprocurarPedidoActionPerformed

    private void tquantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tquantidadeKeyTyped
        validacao.mascaraInteiro(evt);
    }//GEN-LAST:event_tquantidadeKeyTyped

    private void tcodigobarraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tcodigobarraKeyReleased
        Thread tprocura_codigo = new Thread(() -> {
            int qtd = produtos.size();
            for (int i = 0; i < qtd; i++) {
                if (tcodigobarra.getText().equals(produtos.get(i).getCodigobarra())) {
                    produto = produtos.get(i);
                    setaTelaProduto();
                    break;
                }
            }
        });
        tprocura_codigo.start();
    }//GEN-LAST:event_tcodigobarraKeyReleased

    private void bsalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalvarProdutoActionPerformed
        Thread tinserirProduto = new Thread(() -> {
            produto = new Produto();
            setaObjetoProduto();
            String msg = pRN.inserir(produto);
            if (msg != null && !msg.isEmpty()) {
                JOptionPane.showMessageDialog(null, msg, "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Produto salvo com sucesso!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                produtos.add(produto);
                listaProdutos();
            }
        });
        tinserirProduto.start();
    }//GEN-LAST:event_bsalvarProdutoActionPerformed

    private void batualizarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batualizarProdutoActionPerformed
        Thread tatualizaProduto = new Thread(() -> {
            setaObjetoProduto();
            String msg = pRN.atualizar(produto);
            if (msg != null && !msg.isEmpty()) {
                JOptionPane.showMessageDialog(null, msg, "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Produto atualizado com sucesso!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                int qtd = produtos.size();
                for (int i = 0; i < qtd; i++) {
                    if (produtos.get(i).getCodproduto() == produto.getCodproduto()) {
                        produtos.set(i, produto);
                        break;
                    }
                }
                listaProdutos();
            }
        });
        tatualizaProduto.start();
    }//GEN-LAST:event_batualizarProdutoActionPerformed

    private void bexcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexcluirProdutoActionPerformed
        Thread texcluir_produto = new Thread(() -> {
            String msg = pRN.excluir(produto);
            if (msg != null && !msg.isEmpty()) {
                JOptionPane.showMessageDialog(null, msg, "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Produto excluido com sucesso!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                produtos.remove(produto);
                listaProdutos();
                limparProduto();
            }
        });
        texcluir_produto.start();
    }//GEN-LAST:event_bexcluirProdutoActionPerformed

    private void tprodutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tprodutoMouseClicked
        produto = produtos.get(tproduto.getSelectedRow());
        setaTelaProduto();
    }//GEN-LAST:event_tprodutoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        bsalvarProduto.setEnabled(true);
        batualizarProduto.setEnabled(false);
        bexcluirProduto.setEnabled(false);
        limparProduto();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAlterarTipo;
    private javax.swing.JButton batualizarProduto;
    private javax.swing.JButton bconfirmar;
    private javax.swing.JButton bdefine_apto;
    private javax.swing.JButton bdefine_bloco;
    private javax.swing.JButton bexcluirProduto;
    private javax.swing.JButton bfecharcomanda;
    private javax.swing.JButton botaon0;
    private javax.swing.JButton botaon1;
    private javax.swing.JButton botaon2;
    private javax.swing.JButton botaon3;
    private javax.swing.JButton botaon4;
    private javax.swing.JButton botaon5;
    private javax.swing.JButton botaon6;
    private javax.swing.JButton botaon7;
    private javax.swing.JButton botaon8;
    private javax.swing.JButton botaon9;
    private javax.swing.JButton bprocurarPedido;
    private javax.swing.JButton bsalvarProduto;
    private javax.swing.JComboBox capartamento;
    private javax.swing.JComboBox cativo;
    private javax.swing.JComboBox cbloco;
    private javax.swing.JComboBox cmorador;
    private javax.swing.JComboBox ctipo;
    private javax.swing.JComboBox ctipopagamento2;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lavista;
    private javax.swing.JLabel lboleto;
    private javax.swing.JLabel limpressora;
    private javax.swing.JLabel limpressora2;
    private javax.swing.JLabel limpressora3;
    private javax.swing.JLabel llixeira;
    private javax.swing.JLabel llixeira1;
    private javax.swing.JLabel llogo;
    private javax.swing.JLabel llogo2;
    private javax.swing.JLabel llogo3;
    private javax.swing.JLabel ltotal_aberto;
    private javax.swing.JLabel lvltotal;
    private javax.swing.JTextField tcodigobarra;
    private javax.swing.JTextField text_pedido;
    private javax.swing.JTable titem_pedido;
    private javax.swing.JTextField tnomeproduto;
    private javax.swing.JTabbedPane tpComanda;
    private javax.swing.JTable tpedidos_abertos;
    private javax.swing.JTable tpedidos_fechados;
    private javax.swing.JTable tproduto;
    private javax.swing.JTextField tquantidade;
    private javax.swing.JTextField tvalor;
    // End of variables declaration//GEN-END:variables

    public double totalTipo(String tipo){
        double total = 0;
        int    qtd   = pedidos_abertas.size();
        for(int i = 0; i < qtd; i++){
            if(pedidos_abertas.get(i).getTipo().getNome().equalsIgnoreCase(tipo)){
                total += pedidos_abertas.get(i).getValor();
            }
        }
        return total;
    }
    
    public void listaItens() {
        tmi.limpar();
        tmi.addLista(itens_lista);
    }

    public void listaPedidoAbertos() {
        tmpe_abertos.limpar();
        tmpe_abertos.addLista(pedidos_abertas);
    }

    public void listaPedidoFechados() {
        tmpe_fechados.limpar();
        tmpe_fechados.addLista(pedidos_fechadas);
    }

    public void listaProdutos() {
        tmp.limpar();
        tmp.addLista(produtos);
    }

    private void setaTelaProduto() {
        bsalvarProduto.setEnabled(false);
        batualizarProduto.setEnabled(true);
        bexcluirProduto.setEnabled(true);
        tcodigobarra.setText(produto.getCodigobarra());
        tnomeproduto.setText(produto.getNome());
        tvalor.setText(Validacao.formatMoeda(produto.getValor()));
        tquantidade.setText(String.valueOf(produto.getQuantidade()));
        if (produto.getStatus().equals("a")) {
            cativo.setSelectedItem("sim");
        } else {
            cativo.setSelectedItem("não");
        }
    }

    private void setaObjetoProduto() {
        produto.setCodempresa(usuario.getEmpresa().getCodempresa());
        produto.setNome(tnomeproduto.getText());
        produto.setCodigobarra(tcodigobarra.getText());
        produto.setValor(Validacao.formatToDouble(tvalor.getText()));
        produto.setQuantidade(Integer.valueOf(tquantidade.getText()));
        if (cativo.getSelectedItem().toString().equals("sim")) {
            produto.setStatus("a");
        } else {
            produto.setStatus("i");
        }
    }

    private void limparProduto() {
        tcodigobarra.setText("");
        tnomeproduto.setText("");
        tvalor.setText("");
        tquantidade.setText("");
    }

    /**método mais rapido do que usar setselecteditem*/
    private void defineBloco(String bloco_selecionado) {
        if (blocos != null && !blocos.isEmpty()) {
            cbmBloco.clear();
            List<Bloco> blocos_novos = new ArrayList<>(50);
            for(Bloco bloco2:blocos){
                if(bloco2.getBloco().equals(bloco_selecionado)){
                    blocos_novos.add(bloco2);
                    break;
                }
            }
            cbmBloco.addList(blocos_novos);
            if (blocos_novos.size() == 1) {
                bloco = blocos_novos.get(0);
                defineApartamento();
            }
            blocos_novos.add(bloco_selecione);
        }
    }
    
    private void defineApartamento() {
        if (blocos != null && !blocos.isEmpty()) {
            cbmApartamento.clear();
            List<Apartamento> apartamentos_bloco = new ArrayList<>(50);
            apartamentos.stream().filter((apartamento2) -> (apartamento2.getBloco().equals(bloco.getBloco()))).forEach((apartamento2) -> {
                apartamentos_bloco.add(apartamento2);
            });
            Collections.sort(apartamentos_bloco);//para ordenar
            cbmApartamento.addList(apartamentos_bloco);
            if (apartamentos_bloco.size() == 1) {
                apartamento = apartamentos.get(0);
                defineMorador();
            }
            apartamentos_bloco.add(apartamento_selecione);
        }
    }
    
    private void defineApartamento2() {
        if (apartamentos != null && !apartamentos.isEmpty()) {
            cbmApartamento.clear();
            List<Apartamento> apartamentos_bloco = new ArrayList<>(1);
            for (Apartamento apartamento2 : apartamentos) {
                if(apartamento2.getBloco().equals(bloco.getBloco()) && apartamento2.getApartamento().equals(apartamento.getApartamento())){
                    apartamentos_bloco.add(apartamento2);
                    break;
                }
            }
            cbmApartamento.addList(apartamentos_bloco);
            if (apartamentos_bloco.size() == 1) {
                defineMorador();
            }
            apartamentos_bloco.add(apartamento_selecione);
        }
    }

    private void defineMorador() {
        if (apartamentos != null && !apartamentos.isEmpty()) {
            cbmMorador.clear();
            List<Pessoa> moradores_selecionado = new ArrayList<>(5);
            for(Pessoa morador2: moradores){
                if(morador2.getApartamento().equals(apartamento.getApartamento()) && morador2.getBloco().equals(bloco.getBloco())){
                    moradores_selecionado.add(morador2);
                }
            }
            moradores_selecionado.add(pessoa_selecione);
            cbmMorador.addList(moradores_selecionado);
        }
    }

    public void centralizarComponente() {
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dw = getSize();
        setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }
}
